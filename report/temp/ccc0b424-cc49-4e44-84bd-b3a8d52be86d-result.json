{"name": "test_login[api_info0]", "status": "broken", "statusDetails": {"message": "TypeError: requests.api.request() got multiple values for keyword argument 'verify'", "trace": "self = <test_login.TestLogin object at 0x000002646890E080>\napi_info = {'baseInfo': {'api_name': '登录接口', 'headers': '{\"Content-Type\": \"application/json\"}', 'method': 'POST', 'url': '/post'}...登录测试', 'data': '{\"user_name\": \"test01\", \"password\": \"admin123\"}', 'validation': [{'code': 200}, {'contain': 'json'}]}]}\n\n    @pytest.mark.skipif(data is None, reason=\"login.yaml 读取失败，跳过测试\")\n    @pytest.mark.parametrize(\"api_info\", data if data else [{}])  # 避免 data=None 导致 TypeError\n    def test_login(self,api_info):\n        print(\"执行测试:\", api_info)\n        # 使用配置解析对象构造完整的 URL\n        config = ConfigParse()\n        full_url = config.get_host() + api_info['baseInfo'].get('url', '/post')\n    \n        # 复制测试用例数据，避免修改原始数据\n        test_data = dict(api_info['testCase'][0])\n        # 从测试数据中移除 case_name 并保存到变量 case_name\n        case_name = test_data.pop('case_name', '默认用例')\n        # 移除 validation（断言规则），避免重复传入\n        validation = test_data.pop('validation', None)\n    \n        # 处理 headers，如果 headers 是字符串，则转换为字典\n        headers = api_info['baseInfo'].get('headers', '{\"Content-Type\": \"application/json\"}')\n        if isinstance(headers, str):\n            headers = json.loads(headers)\n    \n        # 调用统一请求执行方法\n>       response = SendRequests().execute_api_request(\n            api_name=api_info['baseInfo'].get('api_name', '登录接口'),\n            url=full_url,\n            method=api_info['baseInfo'].get('method', 'POST'),\n            headers=headers,\n            case_name=case_name,\n            **test_data\n        )\n\ntestcases\\test_login.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nunit_tools\\apiutils_business\\SendRequests.py:32: in execute_api_request\n    response = self.send_request(url, method, headers, **kwargs, cookies=cookies, files=files,verify=False)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <unit_tools.apiutils_business.SendRequests.SendRequests object at 0x000002646898DD20>\nurl = 'https://httpbin.org/post', method = 'POST'\nheaders = {'Content-Type': 'application/json'}\ndata = '{\"user_name\": \"test01\", \"password\": \"admin123\"}', cookies = None\nfiles = None, kwargs = {'verify': False}\n\n    def send_request(self, url, method='GET', headers=None, data=None, cookies=None, files=None, **kwargs):\n        \"\"\"\n        发送 HTTP 请求，并返回响应对象\n        \"\"\"\n        try:\n>           response = requests.request(method=method, url=url, headers=headers, data=data, cookies=cookies, files=files, timeout=10, verify=False, **kwargs)\nE           TypeError: requests.api.request() got multiple values for keyword argument 'verify'\n\nunit_tools\\apiutils_business\\SendRequests.py:14: TypeError"}, "attachments": [{"name": "log", "source": "b2186803-ddd0-4d67-bb13-42f99f6efef0-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "60391447-4c1d-4f89-9cb0-588d2df79571-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "c2453d3b-9f76-4786-b2af-cd321d4d67f1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "api_info", "value": "{'baseInfo': {'api_name': '登录接口', 'url': '/post', 'method': 'POST', 'headers': '{\"Content-Type\": \"application/json\"}'}, 'testCase': [{'case_name': '正常登录测试', 'data': '{\"user_name\": \"test01\", \"password\": \"admin123\"}', 'validation': [{'code': 200}, {'contain': 'json'}]}]}"}], "start": 1742403611013, "stop": 1742403611014, "uuid": "558df39b-bc9e-4ece-b9a3-ad68aeb7297d", "historyId": "e9b06027ff1e8c345871030c0851bee1", "testCaseId": "93a39feb8eb701231e6c069b76eeac98", "fullName": "testcases.test_login.TestLogin#test_login", "labels": [{"name": "tag", "value": "@pytest.mark.skipif(False, reason='login.yaml 读取失败，跳过测试')"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-PRRMS83"}, {"name": "thread", "value": "7236-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_login"}]}